name: Build and Deploy Frontend

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_dispatch:
  push:
    branches: [ main ]


env:
  IMAGE_TAG: latest
  BRANCH_NAME: main
  SERVICE_NAME: frontend-cicd
  COMPOSE_DIR: docker-compose.yaml
  WORKDIR: ~/github_actions/frontend-cicd
  BUILD_CONTEXT: .
  REPO_SOURCE: docker-compose.yaml
  REPO_TARGET: /home/ubuntu/github_actions/frontend-cicd

jobs:

  builder:
    name: "Build & Push docker image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/docker
        with:
          image_name: ${{ secrets.REGISTRY_ENDPOINT }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }}
          service_name: ${{ env.SERVICE_NAME }} 
          build_context: ${{ env.BUILD_CONTEXT }}  # * where build
          registry_host: ${{ secrets.REGISTRY_HOST }} # * --- which registry
          registry_username: ${{ github.actor }} # * github will takecaire
          registry_password: ${{ secrets.GHCR_PAT }} # ! this PAT

  # deploy:
  #   name: "Deploy To Server"
  #   runs-on: ubuntu-latest
  #   needs: [builder]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - uses: ./.github/workflows/composite/deploy
  #       with:
  #         service_id: ${{ env.SERVICE_ID }}
  #         workdir: ${{ env.WORKDIR }}
  #         compose_dir: ${{ env.COMPOSE_DIR }}
  #         repository: ${{ github.repository }}
  #         # repository_key: ${{ secrets.REPOSITORY_PRIVATE_KEY }}
  #         # branch_name: ${{ env.BRANCH_NAME }}
  #         ssh_key: ${{ secrets.CLOUD_PEAQOCK_SSH_KEY }}
  #         ssh_host: ${{ secrets.CLOUD_PEAQOCK_HOST }}
  #         ssh_user: ${{ secrets.CLOUD_PEAQOCK_USER }}
  #         registry_host: ${{ secrets.REGISTRY_HOST }}
  #         registry_username: ${{ github.actor }}
  #         registry_password: ${{ secrets.GHCR_PAT }}
  #         repo_source:  ${{ env.REPO_SOURCE }}
  #         repo_target:  ${{ env.REPO_TARGET }}